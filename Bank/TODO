Na kiedys DONE:
17) Przedyskutowac: IBankOffice i IBank kotre sa prawie identyczne
18) Przedyskutowac: klasa Account ma historie czy klasa Bank? ( bank transfersPackage vs account history )

Na kiedys TODO:

12) dokumentacja jak dziala system
15) omowienie co wtedy gdy przelew jest odrzucony przez KIR

Na teraz DONE:
RWoj 1) dodac wzorzec obserwator pomiedzy KIR'em a bankiem - KIR robi poczatek sesji, kazdy bank odsyla paczke (chocby pusta) 
-- bankList jest wlasciwie obserwatorem ma wszystkie informacje dlatego z bankList zrobilem obserwatora

RWoj 2) aktualnie brak powiazan z KIR'em i przelewami w banku
MSzych 3) lista bankï¿½w przy tworzeniu bankï¿½w tworzy filtr dla przelewï¿½w dla danego banku //done
MSzych 4) zaimplementowac filtr dla przelewow //done
MSzych 5) filtry anty-fraudingowe ( powyzej 20 tys ) ( Wzorzec: Chain of responsibility )//done
MSzych 6) filtry anty-fraudingowe ( kilka pod rzad ) rzucenie wyjatkiem na razie ( Wzorzec: Chain of responsibility )//done
RWoj 7) implementacja funkcji w Banks pozwalajaca dobrac sie do konkretnego banku po ID
MSzych 13) dodanie implementacji tego ze KIR otrzymuje paczke przelewow od banku (addTransfersPackage)

Na teraz TODO:

MIgn8) testy integracyjne
21) Dodanie Direct Injection
22) Aktualizacja testów integracyjnych

24) dodanie w BANKS prefixLength i getId analogicznie do klasy account

25) zrobienie z prefixLength private static final w banks i accounts

9) zmienic wszystkie operacje parametry wejsciowe konto na string skladajacy sie z bank.prefix+konto.ID
11) dodac klase dzielaca string na ID konta i id banku i ogolnie walidujaca string (jakis wrapper)

20) Zmienic historie konta tak by miala tytul i mozliwosc wprowadzenia przelewu ( Account.history )

14) dodanie implementacji kir.processTransfersPackage() ( przetworzenie paczki z danymi z transferow odsylanie pakietow do bankow )

16) Account w historii nie wykorzystuje title przy operacji zapisu odczytu

MSzych 19) Powrzucac w package wszystkie klasy

10) okomentowanie kodu/kod samokomentujacy sie
23) Ogólnie refaktor



WIEDZA OGLOLNA:

KIR jest singletonem

KIR ma liste bankow Banks

Bank ma liste kont

Klasy Banks i Accounts zostaly dodane by agregowac banki i konta i generowac dla nich prefixy i ID

Account jest w pelni identyfikowany przez numer konta na ktory sklada sie 8 cyfr Bank.prefix i Accont.ID

KIR otrzymujac paczke wykorzystuje chain of responsibility do rodzielania na paczki dla poszczegolnych bankow, a nastepnie dla tych paczek uzywa filtrow przy pomocy chain of responsibility
Jesli trafi na nieprawidlowy przelew to rzuca wyjatkiem i go obsluguje ( Nie robi nic )

WIEDZA OBECNA ( moze ulec zminanie )

Konto ma tylko swoje ID, Bank ma swoj prefix i ma referencje do konta

Przebieg otwarcia sesji:
kir.openSession();
kir.processTransfersPackage(); w tym momencie sesja sie konczy, i nie ma zadnej funkcji jej wywolujacej, jedynie taka potrzeba zachodzilaby w przypadku dzialania na watkach, a aktualnie mamy jeden watek

Przebieg przelewu:
Przelew mozna zrobic jedynie w oddziale banku
Oddzial banku deleguje metode do banku ktory zwroci false jezeli autoryzacja nie powiedzie sie, w innym przypadku zwraca true, tworzy nowy transfer i modyfikuje wartosc konta.


